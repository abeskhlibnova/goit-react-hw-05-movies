{"version":3,"file":"static/js/412.796c9a8a.chunk.js","mappings":"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","sources":["components/MoviesLists/MoviesList.styled.jsx","components/MoviesLists/MovieList.jsx","components/SearchMovieForm/SearchMovieForm.styled.jsx","components/SearchMovieForm/SearchMovieForm.jsx","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx","services/api/Api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  color: white;\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n\n  &:hover {\n    color: violet;\n  }\n`;\n\nexport const StyledImg = styled.img`\n  margin-right: 20px;\n`;\nexport const MoviesList = styled.ul`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const MovieItem = styled.li`\n  width: 30%;\n  color: white;\n  font-size: 24px;\n  font-weight: 700;\n  border: 1px solid white;\n  margin-bottom: 20px;\n  margin-right: 30px;\n  background-color: rgba(250, 250, 250, 0.2);\n  border-radius: 20px;\n  overflow: hidden;\n`;\n","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport {\n  StyledLink,\n  MoviesList,\n  MovieItem,\n  StyledImg,\n} from './MoviesList.styled';\n\nconst MovieList = ({ items }) => {\n  const location = useLocation();\n  return (\n    <MoviesList key={items.id}>\n      {items.map(({ id, title, poster_path }) => (\n        <MovieItem key={id}>\n          <StyledLink to={`/movies/${id}`} state={{ from: location }}>\n            <StyledImg\n              src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n              alt={title}\n              width=\"100\"\n            />\n            {title}\n          </StyledLink>\n        </MovieItem>\n      ))}\n    </MoviesList>\n  );\n};\n\nMovieList.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default MovieList;\n","import styled from 'styled-components';\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  margin-top: 40px;\n  margin-bottom: 20px;\n  width: 100%;\n  max-width: 350px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const SearchFormButton = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  /* background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg'); */\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const SearchFormInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  text-indent: 15px;\n\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n    text-indent: 15px;\n  }\n`;\n","import { IconContext } from 'react-icons';\nimport { ImSearch } from 'react-icons/im';\nimport PropTypes from 'prop-types';\nimport {\n  SearchForm,\n  SearchFormInput,\n  SearchFormButton,\n} from './SearchMovieForm.styled';\n\nexport default function SearchMovieForm({ onSubmit }) {\n  return (\n    <SearchForm onSubmit={onSubmit}>\n      <SearchFormInput\n        type=\"text\"\n        name=\"search\"\n        autoFocus\n        placeholder=\"Search movies\"\n      />\n      <SearchFormButton type=\"submit\">\n        <IconContext.Provider value={{ color: '#3f51b5', size: '20px' }}>\n          <ImSearch />\n        </IconContext.Provider>\n      </SearchFormButton>\n    </SearchForm>\n  );\n}\n\nSearchMovieForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const MovieWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { SearchMovies } from 'services/api/Api';\nimport SearchMovieForm from 'components/SearchMovieForm/SearchMovieForm';\nimport MovieList from 'components/MoviesLists/MovieList';\nimport { MovieWrapper } from './Movies.styled';\n// import Button from 'components/Button/Button';\n\nexport default function Movies() {\n  const [search, setSearch] = useState('');\n  //   const [page, setPage] = useState(1);\n  const [movies, setMovies] = useState([]);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('searchQuery');\n\n  useEffect(() => {\n    if (!movies) {\n      return;\n    }\n    const fetchSearchMovies = async () => {\n      const searchMovies = await SearchMovies(searchQuery);\n      const dataMovie = searchMovies.results;\n      setMovies(dataMovie);\n      //   setMovies(dataMovie);\n    };\n    if (searchQuery) {\n      fetchSearchMovies();\n    }\n  }, [searchQuery, movies]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const nextSearch = e.target.elements.search.value.toLowerCase();\n    if (search === nextSearch) {\n      setSearchParams('');\n      alert('Please enter a search name.');\n      return;\n    }\n    // setPage(1);\n    setSearch(nextSearch);\n    setMovies([]);\n    setSearchParams({ searchQuery: nextSearch });\n  };\n\n  //   const loadMore = () => setPage(prevPage => prevPage + 1);\n\n  return (\n    <MovieWrapper>\n      <SearchMovieForm onSubmit={handleSubmit} />\n      {searchQuery === null && <p>Please, enter something in form above</p>}\n      {searchQuery !== null && <MovieList items={movies} />}\n\n      {/* <Button onClick={loadMore}>Load More</Button> */}\n    </MovieWrapper>\n  );\n}\n// ///////////////////////////////////////////////////////\n\n// export default function Movies() {\n//   const [searchM, setSearchM] = useState('');\n//   //   const [page, setPage] = useState(1);\n//   const [moviesS, setMoviesS] = useState([]);\n//   const [searchParams, setSearchParams] = useSearchParams();\n//   const search = searchParams.get('search');\n//   const location = useLocation();\n\n//   useEffect(() => {\n//     if (searchM === '') {\n//       return;\n//     }\n//     const fetchSearchMovies = async () => {\n//       const searchMovies = await SearchMovies(search);\n//       //   const resultMovies = await data.results;\n//       setMoviesS(prevMovies => [...prevMovies, ...searchMovies.results]);\n//     };\n//     fetchSearchMovies(search);\n//   }, [search, searchM]);\n\n//   const handleSubmit = e => {\n//     e.preventDefault();\n//     const searchQuery = e.target.elements.search.value.toLowerCase();\n//     if (searchQuery === '') {\n//       setSearchParams({});\n\n//       return alert('Please enter a search name.');\n//     }\n//     setSearchM(searchQuery);\n//     setSearchParams({ search: searchQuery });\n//   };\n\n//   //   const loadMore = () => {\n//   //     setPage(page => page + 1);\n//   //   };\n\n//   //   const isMovies = Boolean(moviesS.length);\n\n//   return (\n//     <>\n//       <SearchMovieForm onSubmit={handleSubmit} />\n//       <MoviesListSearch items={moviesS} location={location} />\n//     </>\n//   );\n// }\n\n// export default function Movies() {\n//   //   const [search, setSearch] = useState([]);\n//   const [page, setPage] = useState(1);\n//   const [movies, setMovies] = useState([]);\n//   const location = useLocation();\n\n//   const [searchParams, setSearchParams] = useSearchParams();\n//   const searchQuery = searchParams.get('searchQuery');\n\n//   useEffect(() => {\n//     const fetchSearchMovies = async () => {\n//       const searchMovies = await SearchMovies(searchQuery, page);\n//       //   const resultMovies = await data.results;\n//       setMovies(prevMovies => [...prevMovies, ...searchMovies.results]);\n//     };\n//     if (searchQuery) {\n//       fetchSearchMovies();\n//     }\n//   }, [searchQuery, page]);\n\n//   const onSearch = ({ search }) => {\n//     setSearchParams({ searchQuery: search });\n//     setPage(1);\n//     setMovies([]);\n//   };\n\n//   const loadMore = () => setPage(prevPage => prevPage + 1);\n\n//   const isMovies = Boolean(movies.length);\n\n//   return (\n//     <>\n//       <SearchMovieForm onSubmit={onSearch} />\n//       <MoviesListSearch items={movies} location={location} />\n//       {isMovies && <Button onClick={loadMore}>Load More</Button>}\n//     </>\n//   );\n// }\n\n// export default function Movies() {\n//   const [search, setSearch] = useState('');\n//   const [page, setPage] = useState(1);\n//   const [movies, setMovies] = useState([]);\n\n//   const [searchParams, setSearchParams] = useSearchParams();\n//   const filter = searchParams.get('filter') ?? '';\n//   const location = useLocation();\n\n//   useEffect(() => {\n//     if (search === '') {\n//       return;\n//     }\n//     const fetchSearchMovies = async () => {\n//       const searchMovies = await SearchMovies(search, page);\n//       //   const dataMovie = searchMovies.results;\n//       setMovies(prevMovies => [...prevMovies, ...searchMovies.results]);\n//       //   setMovies(dataMovie);\n//     };\n//     fetchSearchMovies(search, page);\n//   }, [search, page]);\n\n//   const handleSubmit = e => {\n//     e.preventDefault();\n//     const nextSearch = e.target.elements.search.value.toLowerCase();\n//     if (search === nextSearch) {\n//       setSearchParams('');\n//       alert('Please enter a search name.');\n//       return;\n//     }\n//     setPage(1);\n//     setSearch(nextSearch);\n//     setMovies([]);\n//     setSearchParams({ filter: nextSearch });\n//   };\n//   return (\n//     <>\n//       <SearchMovieForm onSubmit={handleSubmit} />\n//       <MoviesListSearch items={movies} location={location} />\n//     </>\n//   );\n// }\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '3f2d31305f219bdee541e24a029138c5';\n\nexport const TrendingMovies = async () => {\n  try {\n    const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n    const data = await response.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const SearchMovies = async search => {\n  try {\n    const response = await axios.get(\n      `/search/movie?api_key=${API_KEY}&language=en-US&query=${search}&page=1&include_adult=false`\n    );\n    const data = await response.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(\n      `/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n\n    const data = await response.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const MovieCredits = async movieId => {\n  try {\n    const response = await axios.get(\n      `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    const data = await response.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const MovieReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    );\n    const data = await response.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n"],"names":["StyledLink","styled","Link","StyledImg","MoviesList","MovieItem","items","location","useLocation","map","id","title","poster_path","to","state","from","src","alt","width","SearchForm","SearchFormButton","SearchFormInput","SearchMovieForm","onSubmit","type","name","autoFocus","placeholder","value","color","size","MovieWrapper","Movies","useState","search","setSearch","movies","setMovies","useSearchParams","searchParams","setSearchParams","searchQuery","get","useEffect","fetchSearchMovies","SearchMovies","searchMovies","dataMovie","results","e","preventDefault","nextSearch","target","elements","toLowerCase","alert","MovieList","axios","API_KEY","TrendingMovies","response","data","console","error","fetchMovieDetails","movieId","MovieCredits","MovieReviews"],"sourceRoot":""}