{"version":3,"file":"static/js/736.2b537f67.chunk.js","mappings":"6RAGaA,EAASC,EAAAA,GAAAA,OAAH,uOAWNC,EAAWD,EAAAA,GAAAA,GAAH,8IAQRE,EAAYF,EAAAA,GAAAA,IAAH,0HACIG,GAMbC,EAAWJ,EAAAA,GAAAA,GAAH,yRAcRK,EAAcL,EAAAA,GAAAA,EAAH,8FAMXM,EAAYN,EAAAA,GAAAA,IAAH,iE,kBCpCP,SAASO,IACtB,OAAkCC,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,mCAAG,qGACOC,EAAAA,EAAAA,IAAaN,GADpB,OACfO,EADe,OAErBR,EAAaQ,EAAcC,MAFN,2CAAH,qDAIpBH,GACD,GAAE,CAACL,IAEJ,IAAMS,EAAWX,EAAUY,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAA3B,OAC7B,UAACrB,EAAD,YACE,SAACF,EAAD,CACEwB,IAAG,yCAAoCH,GACvCI,IAAI,GACJC,MAAM,SAER,4BACE,SAACvB,EAAD,UAAcmB,KACd,SAACnB,EAAD,UAAcoB,SARHH,EADc,IAe/B,OACE,iCACE,UAACvB,EAAD,CAAQ8B,KAAK,SAASC,QAJX,kBAAMjB,GAAU,EAAhB,EAIX,uBACa,OAES,IAArBJ,EAAUsB,QACT,UAACzB,EAAD,YACE,+FAGA,gBAAKoB,IAAKM,EAAQL,IAAI,GAAGC,MAAM,YAGjC,SAAC3B,EAAD,UAAWmB,MAIlB,C,8LCxDDa,EAAAA,GAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAc,mCAAG,+GAEHF,EAAAA,GAAAA,IAAA,sCAAyCC,IAFtC,cAEpBE,EAFoB,gBAGPA,EAASC,KAHF,cAGpBA,EAHoB,yBAInBA,GAJmB,kCAM1BC,QAAQC,MAAR,MAN0B,0DAAH,qDAUdC,EAAY,mCAAG,WAAMC,GAAN,kGAEDR,EAAAA,GAAAA,IAAA,gCACIC,EADJ,iCACoCO,EADpC,gCAFC,cAElBL,EAFkB,gBAKLA,EAASC,KALJ,cAKlBA,EALkB,yBAMjBA,GANiB,kCAQxBC,QAAQC,MAAR,MARwB,0DAAH,sDAYZG,EAAiB,mCAAG,WAAM/B,GAAN,kGAENsB,EAAAA,GAAAA,IAAA,iBACXtB,EADW,oBACQuB,EADR,oBAFM,cAEvBE,EAFuB,gBAMVA,EAASC,KANC,cAMvBA,EANuB,yBAOtBA,GAPsB,kCAS7BC,QAAQC,MAAR,MAT6B,0DAAH,sDAajBtB,EAAY,mCAAG,WAAMN,GAAN,kGAEDsB,EAAAA,GAAAA,IAAA,iBACXtB,EADW,4BACgBuB,EADhB,oBAFC,cAElBE,EAFkB,gBAKLA,EAASC,KALJ,cAKlBA,EALkB,yBAMjBA,GANiB,kCAQxBC,QAAQC,MAAR,MARwB,0DAAH,sDAYZI,EAAY,mCAAG,WAAMhC,GAAN,kGAEDsB,EAAAA,GAAAA,IAAA,iBACXtB,EADW,4BACgBuB,EADhB,2BAFC,cAElBE,EAFkB,gBAKLA,EAASC,KALJ,cAKlBA,EALkB,yBAMjBA,GANiB,kCAQxBC,QAAQC,MAAR,MARwB,0DAAH,qD","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","services/api/Api.js"],"sourcesContent":["import styled from 'styled-components';\nimport nophoto from 'images/nophoto.jpg';\n\nexport const Button = styled.button`\n  background-color: rgba(66, 27, 146);\n  border: 1px solid white;\n  color: #fff;\n  border-radius: 10px;\n  font-size: 16px;\n  font-weight: 600;\n  width: 150px;\n  height: 40px;\n  margin-bottom: 20px;\n`;\nexport const StyledUl = styled.ul`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: center;\n`;\n\nexport const StyledImg = styled.img`\n  background-image: url(${nophoto});\n  background-size: cover;\n  margin-right: 20px;\n  height: 150px;\n`;\n\nexport const StyledLi = styled.li`\n  display: flex;\n  width: 20%;\n  height: 50%;\n  font-size: 24px;\n  font-weight: 700;\n  border: 1px solid white;\n  margin-bottom: 20px;\n  margin-right: 30px;\n  background-color: rgba(250, 250, 250, 0.8);\n  border-radius: 20px;\n  overflow: hidden;\n`;\n\nexport const Description = styled.p`\n  color: rgba(66, 27, 146);\n  line-height: 1.1;\n  font-size: 16px;\n`;\n\nexport const ErrorInfo = styled.div`\n  color: white;\n  margin-bottom: 40px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { MovieCredits } from 'services/api/Api';\nimport {\n  Button,\n  StyledUl,\n  StyledImg,\n  StyledLi,\n  Description,\n  ErrorInfo,\n} from './Cast.styled';\nimport noInfo from 'images/noInfo.png';\n\nexport default function Cast() {\n  const [movieCast, setMovieCast] = useState([]);\n  const { movieId } = useParams();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchMovieCast = async () => {\n      const movieCastInfo = await MovieCredits(movieId);\n      setMovieCast(movieCastInfo.cast);\n    };\n    fetchMovieCast();\n  }, [movieId]);\n\n  const elements = movieCast.map(({ id, profile_path, name, character }) => (\n    <StyledLi key={id}>\n      <StyledImg\n        src={`https://image.tmdb.org/t/p/w500${profile_path}`}\n        alt=\"\"\n        width=\"100\"\n      />\n      <div>\n        <Description>{name}</Description>\n        <Description>{character}</Description>\n      </div>\n    </StyledLi>\n  ));\n  const goBack = () => navigate(-1);\n\n  return (\n    <>\n      <Button type=\"button\" onClick={goBack}>\n        Close cast{' '}\n      </Button>\n      {movieCast.length === 0 ? (\n        <ErrorInfo>\n          <p>\n            Sorry, We don't have any information about reviews for this movies\n          </p>\n          <img src={noInfo} alt=\"\" width=\"150\" />\n        </ErrorInfo>\n      ) : (\n        <StyledUl>{elements}</StyledUl>\n      )}\n    </>\n  );\n}\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '3f2d31305f219bdee541e24a029138c5';\n\nexport const TrendingMovies = async () => {\n  try {\n    const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n    const data = await response.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const SearchMovies = async search => {\n  try {\n    const response = await axios.get(\n      `/search/movie?api_key=${API_KEY}&language=en-US&query=${search}&page=1&include_adult=false`\n    );\n    const data = await response.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(\n      `/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n\n    const data = await response.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const MovieCredits = async movieId => {\n  try {\n    const response = await axios.get(\n      `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    const data = await response.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const MovieReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    );\n    const data = await response.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n"],"names":["Button","styled","StyledUl","StyledImg","nophoto","StyledLi","Description","ErrorInfo","Cast","useState","movieCast","setMovieCast","movieId","useParams","navigate","useNavigate","useEffect","fetchMovieCast","MovieCredits","movieCastInfo","cast","elements","map","id","profile_path","name","character","src","alt","width","type","onClick","length","noInfo","axios","API_KEY","TrendingMovies","response","data","console","error","SearchMovies","search","fetchMovieDetails","MovieReviews"],"sourceRoot":""}