{"version":3,"file":"static/js/200.c21e2b69.chunk.js","mappings":"yNAGaA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,uKAWVE,EAAYF,EAAAA,GAAAA,IAAH,+CAGTG,EAAaH,EAAAA,GAAAA,GAAH,0IAQVI,EAAYJ,EAAAA,GAAAA,GAAH,wQ,SCctB,EA9BkB,SAAC,GAAe,IAAbK,EAAY,EAAZA,MACbC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAACJ,EAAD,UACGE,EAAMG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,YAAd,OACT,SAACP,EAAD,WACE,UAACL,EAAD,CAAYa,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMR,GAAhD,WACE,SAACJ,EAAD,CACEa,IAAG,yCAAoCJ,GACvCK,IAAKN,EACLO,MAAM,QAEPP,MAPWD,EADP,KADIJ,EAAMI,GAe1B,C,uJCzBYS,E,QAAYlB,GAAAA,GAAH,wO,SCGP,SAASmB,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAWA,OATAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,uGACCC,EAAAA,EAAAA,MADD,cACZC,EADY,gBAEOA,EAAKC,QAFZ,OAEZC,EAFY,OAGlBN,EAAUM,GAHQ,2CAAH,qDAKjBJ,GACD,GAAE,KAGD,iCACE,SAACN,EAAD,qCACA,SAACW,EAAA,EAAD,CAAWxB,MAAOgB,MAGvB,C,mMCrBDS,EAAAA,GAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHN,EAAc,mCAAG,+GAEHK,EAAAA,GAAAA,IAAA,sCAAyCC,IAFtC,cAEpBC,EAFoB,gBAGPA,EAASN,KAHF,cAGpBA,EAHoB,yBAInBA,GAJmB,kCAM1BO,QAAQC,MAAR,MAN0B,0DAAH,qDAUdC,EAAY,mCAAG,WAAMC,GAAN,kGAEDN,EAAAA,GAAAA,IAAA,gCACIC,EADJ,iCACoCK,EADpC,gCAFC,cAElBJ,EAFkB,gBAKLA,EAASN,KALJ,cAKlBA,EALkB,yBAMjBA,GANiB,kCAQxBO,QAAQC,MAAR,MARwB,0DAAH,sDAYZG,EAAiB,mCAAG,WAAMC,GAAN,kGAENR,EAAAA,GAAAA,IAAA,iBACXQ,EADW,oBACQP,EADR,oBAFM,cAEvBC,EAFuB,gBAMVA,EAASN,KANC,cAMvBA,EANuB,yBAOtBA,GAPsB,kCAS7BO,QAAQC,MAAR,MAT6B,0DAAH,sDAajBK,EAAY,mCAAG,WAAMD,GAAN,kGAEDR,EAAAA,GAAAA,IAAA,iBACXQ,EADW,4BACgBP,EADhB,oBAFC,cAElBC,EAFkB,gBAKLA,EAASN,KALJ,cAKlBA,EALkB,yBAMjBA,GANiB,kCAQxBO,QAAQC,MAAR,MARwB,0DAAH,sDAYZM,EAAY,mCAAG,WAAMF,GAAN,kGAEDR,EAAAA,GAAAA,IAAA,iBACXQ,EADW,4BACgBP,EADhB,2BAFC,cAElBC,EAFkB,gBAKLA,EAASN,KALJ,cAKlBA,EALkB,yBAMjBA,GANiB,kCAQxBO,QAAQC,MAAR,MARwB,0DAAH,qD","sources":["components/MoviesLists/MoviesList.styled.jsx","components/MoviesLists/MovieList.jsx","pages/HomePage/HomePage.styled.jsx","pages/HomePage/Homepage.jsx","services/api/Api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  color: rgba(66, 27, 146);\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n\n  &:hover {\n    color: violet;\n  }\n`;\n\nexport const StyledImg = styled.img`\n  margin-right: 20px;\n`;\nexport const MoviesList = styled.ul`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const MovieItem = styled.li`\n  width: 20%;\n  color: black;\n  font-size: 24px;\n  font-weight: 700;\n  border: 1px solid white;\n  margin-bottom: 20px;\n  margin-right: 30px;\n  background-color: rgba(250, 250, 250, 0.8);\n  border-radius: 20px;\n  overflow: hidden;\n`;\n","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport {\n  StyledLink,\n  MoviesList,\n  MovieItem,\n  StyledImg,\n} from './MoviesList.styled';\n\nconst MovieList = ({ items }) => {\n  const location = useLocation();\n  return (\n    <MoviesList key={items.id}>\n      {items.map(({ id, title, poster_path }) => (\n        <MovieItem key={id}>\n          <StyledLink to={`/movies/${id}`} state={{ from: location }}>\n            <StyledImg\n              src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n              alt={title}\n              width=\"100\"\n            />\n            {title}\n          </StyledLink>\n        </MovieItem>\n      ))}\n    </MoviesList>\n  );\n};\n\nMovieList.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default MovieList;\n","import styled from 'styled-components';\n\nexport const TitleHome = styled.h2`\n  color: rgba(66, 27, 146);\n  font-size: 40px;\n  font-weight: 900;\n  text-shadow: 2px 2px 2px white, 0 2px 2px white, -2px 0 2px white,\n    0 -2px 2px white;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import React, { useEffect, useState } from 'react';\nimport { TrendingMovies } from 'services/api/Api';\nimport MovieList from 'components/MoviesLists/MovieList';\nimport { TitleHome } from './HomePage.styled';\n\nexport default function HomePage() {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      const data = await TrendingMovies();\n      const moviesData = await data.results;\n      setMovies(moviesData);\n    };\n    fetchMovies();\n  }, []);\n\n  return (\n    <>\n      <TitleHome>Trending Movies Today</TitleHome>\n      <MovieList items={movies} />\n    </>\n  );\n}\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '3f2d31305f219bdee541e24a029138c5';\n\nexport const TrendingMovies = async () => {\n  try {\n    const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n    const data = await response.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const SearchMovies = async search => {\n  try {\n    const response = await axios.get(\n      `/search/movie?api_key=${API_KEY}&language=en-US&query=${search}&page=1&include_adult=false`\n    );\n    const data = await response.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(\n      `/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n\n    const data = await response.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const MovieCredits = async movieId => {\n  try {\n    const response = await axios.get(\n      `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    const data = await response.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const MovieReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    );\n    const data = await response.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n"],"names":["StyledLink","styled","Link","StyledImg","MoviesList","MovieItem","items","location","useLocation","map","id","title","poster_path","to","state","from","src","alt","width","TitleHome","HomePage","useState","movies","setMovies","useEffect","fetchMovies","TrendingMovies","data","results","moviesData","MovieList","axios","API_KEY","response","console","error","SearchMovies","search","fetchMovieDetails","movieId","MovieCredits","MovieReviews"],"sourceRoot":""}