{"version":3,"file":"static/js/387.4d8d94ac.chunk.js","mappings":"kRAEaA,EAASC,EAAAA,GAAAA,OAAH,uOAWNC,EAAWD,EAAAA,GAAAA,GAAH,sBAERE,EAAWF,EAAAA,GAAAA,GAAH,wTAgBRG,EAAcH,EAAAA,GAAAA,EAAH,8FAMXI,EAAYJ,EAAAA,GAAAA,IAAH,iE,kBCzBP,SAASK,IACtB,OAAwCC,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,qGACMC,EAAAA,EAAAA,IAAaN,GADnB,OAClBO,EADkB,OAExBR,EAAgBQ,EAAgBC,SAFR,2CAAH,qDAIvBH,GACD,GAAE,CAACL,IAEJ,IAAMS,EAAWX,EAAaY,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OAChC,UAACpB,EAAD,YACE,UAACC,EAAD,sBAAsBkB,MACtB,SAAClB,EAAD,UAAcmB,MAFDF,EADiB,IAOlC,OACE,iCACE,SAACrB,EAAD,CAAQwB,KAAK,SAASC,QAHX,kBAAMb,GAAU,EAAhB,EAGX,2BAGyB,IAAxBJ,EAAakB,QACZ,UAACrB,EAAD,YACE,+FAGA,gBAAKsB,IAAKC,EAAQC,IAAI,GAAGC,MAAM,YAGjC,SAAC5B,EAAD,UAAWiB,IAZf,MAiBH,C,8LChDDY,EAAAA,GAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAc,mCAAG,+GAEHF,EAAAA,GAAAA,IAAA,sCAAyCC,IAFtC,cAEpBE,EAFoB,gBAGPA,EAASC,KAHF,cAGpBA,EAHoB,yBAInBA,GAJmB,kCAM1BC,QAAQC,MAAR,MAN0B,0DAAH,qDAUdC,EAAY,mCAAG,WAAMC,GAAN,kGAEDR,EAAAA,GAAAA,IAAA,gCACIC,EADJ,iCACoCO,EADpC,gCAFC,cAElBL,EAFkB,gBAKLA,EAASC,KALJ,cAKlBA,EALkB,yBAMjBA,GANiB,kCAQxBC,QAAQC,MAAR,MARwB,0DAAH,sDAYZG,EAAiB,mCAAG,WAAM9B,GAAN,kGAENqB,EAAAA,GAAAA,IAAA,iBACXrB,EADW,oBACQsB,EADR,oBAFM,cAEvBE,EAFuB,gBAMVA,EAASC,KANC,cAMvBA,EANuB,yBAOtBA,GAPsB,kCAS7BC,QAAQC,MAAR,MAT6B,0DAAH,sDAajBI,EAAY,mCAAG,WAAM/B,GAAN,kGAEDqB,EAAAA,GAAAA,IAAA,iBACXrB,EADW,4BACgBsB,EADhB,oBAFC,cAElBE,EAFkB,gBAKLA,EAASC,KALJ,cAKlBA,EALkB,yBAMjBA,GANiB,kCAQxBC,QAAQC,MAAR,MARwB,0DAAH,sDAYZrB,EAAY,mCAAG,WAAMN,GAAN,kGAEDqB,EAAAA,GAAAA,IAAA,iBACXrB,EADW,4BACgBsB,EADhB,2BAFC,cAElBE,EAFkB,gBAKLA,EAASC,KALJ,cAKlBA,EALkB,yBAMjBA,GANiB,kCAQxBC,QAAQC,MAAR,MARwB,0DAAH,qD","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","services/api/Api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Button = styled.button`\n  background-color: rgba(66, 27, 146);\n  border: 1px solid white;\n  color: #fff;\n  border-radius: 10px;\n  font-size: 16px;\n  font-weight: 600;\n  width: 150px;\n  height: 40px;\n  margin-bottom: 20px;\n`;\nexport const StyledUl = styled.ul``;\n\nexport const StyledLi = styled.li`\n  display: flex;\n  flex-direction: column;\n  width: 80%;\n\n  font-size: 24px;\n  font-weight: 700;\n  border: 1px solid white;\n  margin-bottom: 20px;\n  margin-right: 30px;\n  background-color: rgba(250, 250, 250, 0.8);\n  border-radius: 20px;\n  overflow: hidden;\n  padding: 10px;\n`;\n\nexport const Description = styled.p`\n  color: rgba(66, 27, 146);\n  line-height: 1.1;\n  font-size: 18px;\n`;\n\nexport const ErrorInfo = styled.div`\n  color: white;\n  margin-bottom: 40px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { MovieReviews } from 'services/api/Api';\nimport {\n  Button,\n  StyledUl,\n  StyledLi,\n  Description,\n  ErrorInfo,\n} from './Reviews.styled';\nimport noInfo from 'images/noInfo.png';\n\nexport default function Reviews() {\n  const [movieReviews, setMovieReviews] = useState([]);\n  const { movieId } = useParams();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchMovieReviews = async () => {\n      const movieReviewInfo = await MovieReviews(movieId);\n      setMovieReviews(movieReviewInfo.results);\n    };\n    fetchMovieReviews();\n  }, [movieId]);\n\n  const elements = movieReviews.map(({ id, author, content }) => (\n    <StyledLi key={id}>\n      <Description>Author: {author}</Description>\n      <Description>{content}</Description>\n    </StyledLi>\n  ));\n  const goBack = () => navigate(-1);\n  return (\n    <>\n      <Button type=\"button\" onClick={goBack}>\n        Close reviews\n      </Button>\n      {movieReviews.length === 0 ? (\n        <ErrorInfo>\n          <p>\n            Sorry, We don't have any information about reviews for this movies\n          </p>\n          <img src={noInfo} alt=\"\" width=\"150\" />\n        </ErrorInfo>\n      ) : (\n        <StyledUl>{elements}</StyledUl>\n      )}\n      ;\n    </>\n  );\n}\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '3f2d31305f219bdee541e24a029138c5';\n\nexport const TrendingMovies = async () => {\n  try {\n    const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n    const data = await response.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const SearchMovies = async search => {\n  try {\n    const response = await axios.get(\n      `/search/movie?api_key=${API_KEY}&language=en-US&query=${search}&page=1&include_adult=false`\n    );\n    const data = await response.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(\n      `/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n\n    const data = await response.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const MovieCredits = async movieId => {\n  try {\n    const response = await axios.get(\n      `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    const data = await response.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const MovieReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    );\n    const data = await response.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n"],"names":["Button","styled","StyledUl","StyledLi","Description","ErrorInfo","Reviews","useState","movieReviews","setMovieReviews","movieId","useParams","navigate","useNavigate","useEffect","fetchMovieReviews","MovieReviews","movieReviewInfo","results","elements","map","id","author","content","type","onClick","length","src","noInfo","alt","width","axios","API_KEY","TrendingMovies","response","data","console","error","SearchMovies","search","fetchMovieDetails","MovieCredits"],"sourceRoot":""}