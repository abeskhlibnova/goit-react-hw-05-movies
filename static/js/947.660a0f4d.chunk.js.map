{"version":3,"file":"static/js/947.660a0f4d.chunk.js","mappings":"wQAKe,SAASA,IACtB,OAAwCC,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAsCF,EAAAA,EAAAA,UAAS,IAA/C,eAAOG,EAAP,KAAoBC,EAApB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,OAKjBC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,qGACOC,EAAAA,EAAAA,IAAkBN,GADzB,OACXO,EADW,OAEjBV,EAAgBU,GAChBR,EAAeQ,EAAUC,QAHR,2CAAH,qDAKhBH,GACD,GAAE,CAACL,IAEJ,IAAQS,EACNb,EADMa,MAAOC,EACbd,EADac,YAAaC,EAC1Bf,EAD0Be,aAAcC,EACxChB,EADwCgB,SAAUC,EAClDjB,EADkDiB,aAI9CC,EADO,IAAIC,KAAKJ,GACGK,cAGnBC,EADOC,OAAOL,GACAM,QAAQ,GAEtBX,EAASV,EAAYsB,KAAI,SAAAC,GAAI,OAAIA,EAAKC,IAAT,IAAeC,KAAK,MASvD,OAAK3B,GAKH,4BACE,mBAAQ4B,QAbG,kBAAMtB,GAAU,EAAhB,EAaX,sBACA,gBACEuB,IAAG,yCAAoCf,GACvCgB,IAAKjB,EACLkB,MAAM,SAER,4BACE,0BACGlB,EADH,KACYK,EADZ,QAGA,2BACE,2BACE,qCACA,uBAAIG,QAEN,2BACE,uCACA,uBAAIL,QAEN,2BACE,qCACA,uBAAIJ,cAIV,4BACE,oDACA,SAAC,KAAD,CAAMoB,GAAI,OAAV,oBACA,SAAC,KAAD,CAAMA,GAAI,UAAV,2BAGF,SAAC,KAAD,QApCK,uDAuCV,C,8LC/EDC,EAAAA,GAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAc,mCAAG,+GAEHF,EAAAA,GAAAA,IAAA,sCAAyCC,IAFtC,cAEpBE,EAFoB,gBAGPA,EAASC,KAHF,cAGpBA,EAHoB,yBAInBA,GAJmB,kCAM1BC,QAAQC,MAAR,MAN0B,0DAAH,qDAUdC,EAAY,mCAAG,WAAMC,GAAN,kGAEDR,EAAAA,GAAAA,IAAA,gCACIC,EADJ,iCACoCO,EADpC,gCAFC,cAElBL,EAFkB,gBAKLA,EAASC,KALJ,cAKlBA,EALkB,yBAMjBA,GANiB,kCAQxBC,QAAQC,MAAR,MARwB,0DAAH,sDAYZ7B,EAAiB,mCAAG,WAAMN,GAAN,kGAEN6B,EAAAA,GAAAA,IAAA,iBACX7B,EADW,oBACQ8B,EADR,oBAFM,cAEvBE,EAFuB,gBAMVA,EAASC,KANC,cAMvBA,EANuB,yBAOtBA,GAPsB,kCAS7BC,QAAQC,MAAR,MAT6B,0DAAH,sDAajBG,EAAY,mCAAG,WAAMtC,GAAN,kGAED6B,EAAAA,GAAAA,IAAA,iBACX7B,EADW,4BACgB8B,EADhB,oBAFC,cAElBE,EAFkB,gBAKLA,EAASC,KALJ,cAKlBA,EALkB,yBAMjBA,GANiB,kCAQxBC,QAAQC,MAAR,MARwB,0DAAH,sDAYZI,EAAY,mCAAG,WAAMvC,GAAN,kGAED6B,EAAAA,GAAAA,IAAA,iBACX7B,EADW,4BACgB8B,EADhB,2BAFC,cAElBE,EAFkB,gBAKLA,EAASC,KALJ,cAKlBA,EALkB,yBAMjBA,GANiB,kCAQxBC,QAAQC,MAAR,MARwB,0DAAH,qD","sources":["components/MovieDetails/MovieDetails.jsx","services/api/Api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams, useNavigate, Outlet } from 'react-router-dom';\nimport { fetchMovieDetails } from 'services/api/Api';\nimport { Link } from 'react-router-dom';\n\nexport default function MovieDetails() {\n  const [movieDetails, setMovieDetails] = useState('');\n  const [genresMovie, setGenresMovie] = useState([]);\n  const { movieId } = useParams();\n  const navigate = useNavigate();\n  //   const location = useLocation()\n  //   const from = location.movieDetails?.from;\n  //   console.log(location);\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      const movieInfo = await fetchMovieDetails(movieId);\n      setMovieDetails(movieInfo);\n      setGenresMovie(movieInfo.genres);\n    };\n    fetchMovie();\n  }, [movieId]);\n\n  const { title, poster_path, release_date, overview, vote_average } =\n    movieDetails;\n\n  const data = new Date(release_date);\n  const releaseDate = data.getFullYear();\n\n  const vote = Number(vote_average);\n  const rating = vote.toFixed(2);\n\n  const genres = genresMovie.map(item => item.name).join(', ');\n\n  const goBack = () => navigate(-1);\n\n  //   const isCastPage = location.pathname.includes('cast');\n  //   const castLink = isCastPage\n  //     ? `/movies/${movieId}`\n  //     : `/movies/${movieId}/cast`;\n\n  if (!movieDetails) {\n    return <div>Sorry,something went wrong</div>;\n  }\n\n  return (\n    <div>\n      <button onClick={goBack}>Go back</button>\n      <img\n        src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n        alt={title}\n        width=\"250\"\n      />\n      <div>\n        <h2>\n          {title} ({releaseDate})\n        </h2>\n        <ul>\n          <li>\n            <p>Rating: </p>\n            <p>{rating}</p>\n          </li>\n          <li>\n            <p>Overview: </p>\n            <p>{overview}</p>\n          </li>\n          <li>\n            <p>Genres: </p>\n            <p>{genres}</p>\n          </li>\n        </ul>\n      </div>\n      <div>\n        <h3>Additional information</h3>\n        <Link to={'cast'}>Cast:</Link>\n        <Link to={'reviews'}>Reviews: </Link>\n      </div>\n\n      <Outlet />\n    </div>\n  );\n}\n\n// <Link state={{ from }} to={castLink}>\n//   Cast:{' '}\n// </Link>;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '3f2d31305f219bdee541e24a029138c5';\n\nexport const TrendingMovies = async () => {\n  try {\n    const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n    const data = await response.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const SearchMovies = async search => {\n  try {\n    const response = await axios.get(\n      `/search/movie?api_key=${API_KEY}&language=en-US&query=${search}&page=1&include_adult=false`\n    );\n    const data = await response.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(\n      `/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n\n    const data = await response.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const MovieCredits = async movieId => {\n  try {\n    const response = await axios.get(\n      `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    const data = await response.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const MovieReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    );\n    const data = await response.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n"],"names":["MovieDetails","useState","movieDetails","setMovieDetails","genresMovie","setGenresMovie","movieId","useParams","navigate","useNavigate","useEffect","fetchMovie","fetchMovieDetails","movieInfo","genres","title","poster_path","release_date","overview","vote_average","releaseDate","Date","getFullYear","rating","Number","toFixed","map","item","name","join","onClick","src","alt","width","to","axios","API_KEY","TrendingMovies","response","data","console","error","SearchMovies","search","MovieCredits","MovieReviews"],"sourceRoot":""}